
[
 :html-file { :filename "navigation.html" :home-active "active" }


 :html-hiccup [:div
               [:h1 "Explainer - a simple program for explaining things"]
               [:br]

               [:h3 "Rational: Why was this tool created?"]

               [:p "Does the world really need another static site generator?  Probably not, but here we go..." ]

               [:p "As a BE engineer, I wanted to document/discuss the flow
               of information in the system, showing multiple plantuml
               diagrams and swagger endpoints in a single easy to
               review/update/discuss document." ]

               [:h3 "Why would you use it?"]

               [:p
               "To create and share some documenation about how
              something works.  You can explain something using html
              directly - but explainer provides more content
              types (ie. plantuml, dot, markdown.)  Since Explainer is
              fairly simple, a clojure developer can adapt it to
              unforseen needs."
]

              [:p "There are other more complicated systems out there
              for generating html pages, " [:a
              {:href "https://asciidoctor.org/"} "asciidoctor"] "
              looked cool, but also complicated.  Also consider " [:a
              {:href "https://github.com/nextjournal/clerk" } "Clerk"
              ]] ]


 :markdown "### Assumptions / Constraints

- you dont mind editing edn using your own editor
- you will likey work with an 'editor window' paired to a 'browser window'
- your audience can read the page in a browser
- the edn file always has [chunk-type chunk-data] so an even number of elements.
- the chunk types do not nest inside eachother, there is only 1 level of depth
- you will probably be missing something and want to create your own chunk type
"

 :html-hiccup [:div
               [:br]
               [:h3 "How does it work?"]

               [:p "Explainer reads edn files and transforms them into html files.  Each edn file is a list of content of various types called chunks." ]
               
               [:p
                "You create an input file (ie index.edn) " [:a
               {:href "https://learnxinyminutes.com/docs/edn/"} "EDN
               data format"] ", then execute the 'explainer' program.
               It walks through each chunk of the input file and
               produces html for each section. "]

               [:p "For plantUML sections, the plantUML api is invoked
               and the diagram is generated.  See " [:a
               {:href "https://plantuml.com/"} "https://plantuml.com/"] " The
               easy way to create a plantuml diagram is to find a good
               diagram on the plantuml site, then click on it.  You
               can then develop the diagram in the cloud, and when
               finished copy the text into explainer"]

               [:p "For example, Using this as the 'input/index.edn' file,"]
               [:span.ex-block 
                [:pre
                 "[ 
      ;; chunk type       chunk-data
      :html-hiccup        [:div [:h3 \"Authentication Example\" ] [:br] [:br] ] ]
      :plantuml-file      \"diagram.pu\"
]"]]
               [:br]
               "The following output (docs/index.html) is generated;"
               [:br]
               [:br]]
 
 :html "<div class='ex-block'>"
 ;; chunk type   chunk-data
 :html-hiccup    [:div [:h3 "Authentication Example" ] [:br] ]
 :plantuml-file  "diagram.pu"
 :html "<br></div>"

 :markdown "#Enjoy!"

 :html "\"All models are wrong, but some are useful.\" --George Box"

 :html "</div></html>"

 ]

